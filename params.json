{"name":"Undr Rover","tagline":"Unmapped primer directed ROVER","body":"## A simple, fast method of calling variants directly from FASTQs without mapping\r\n\r\n\r\n### How to use Undr Rover to call variants\r\n#### 1. Download the Undr Rover software. \r\nDownload Undr Rover as a .zip from [GitHub](https://github.com/rli99/undr_rover/archive/master.zip)\r\n#### 2. Ensure the relevant dependencies are installed. \r\nUndr Rover requires the Biopython, PyVCF and Pyfaidx libraries. They can be installed with the following line: `pip install -r REQUIREMENTS.txt`\r\n#### 3. Acquire the genome reference file in FASTA format. \r\nAs no mapping is undertaken by Undr Rover, this file is required for variants to be called. It can be downloaded at ___? Note that you will also need the .fai index file. \r\n#### 4. Create a file specifying target regions.\r\nThe file should be tab-separated, and contain information in 5 columns. The first column will contain chromosome numbers, while the second and third columns specify the starting and ending coordinates of the target regions. The fourth and fifth columns will name the forward and reverse primers of each target region. \r\n\r\nAn example of such a file is shown below:\r\n\r\n    chr11\t31811401\t31811498\tPAX6_1_F1\tPAX6_1_R1\r\n    chr11\t31811499\t31811597\tPAX6_1_F2\tPAX6_1_R2\r\n    chr11\t31812210\t31812307\tPAX6_2_F1\tPAX6_2_R1\r\n    chr11\t31812308\t31812406\tPAX6_2_F2\tPAX6_2_R2\r\n    chr11\t31812399\t31812496\tPAX6_2_F3\tPAX6_2_R3\r\n    chr11\t31814945\t31815042\tPAX6_3_F1\tPAX6_3_R1\r\n    chr11\t31815043\t31815140\tPAX6_3_F2\tPAX6_3_R2\r\n    chr11\t31815147\t31815244\tPAX6_4_F1\tPAX6_4_R1\r\n    chr11\t31815242\t31815339\tPAX6_4_F2\tPAX6_4_R2\r\n    chr11\t31815340\t31815437\tPAX6_4_F3\tPAX6_4_R3\r\n\r\nSpecify the name of this file using the --primer_coords command line parameter.\r\n\r\n#### 5. Create a file specifying the primer sequences. \r\nUndr Rover requires the primer sequences for each primer in order to correctly match reads to target regions. The file should be tab-separated and simply contain 2 columns, with the first containing the primer name and the second containing the primer sequence. \r\n\r\nAn example of such a file is shown below:\r\n\r\n    PAX6_1_F1\tTAACAGCCATTTTTCTTTCTTTCCT\t\t\r\n    PAX6_1_R1\tGTGAACCTGATATGTCTCAATACT\t\t\r\n    PAX6_1_F2\tTTTTTTTTTTTACTGTAATCTTGGCC\t\t\r\n    PAX6_1_R2\tTGTCTGTTTCTCAAAGGGAATATC\t\t\r\n    PAX6_2_F1\tGAGATTCTGTTTGGGTAAACTTCT\t\t\r\n    PAX6_2_R1\tCTACACCCCCCCACATATGCA\t\t\r\n    PAX6_2_F2\tTGGCTGACTGTTCATGTGTGTC\t\t\r\n    PAX6_2_R2\tTTTGCCTCTCTCCTCACAGCC\t\t\r\n    PAX6_2_F3\tAGTATGAGGAGGTCTGGCTGG\t\t\r\n    PAX6_2_R3\tGGCATCTTTAATGATCAGACTTGT\r\n\r\nSpecify the name of this file using the --primer_sequences command line parameter.\r\n\r\n#### 6. Run Undr Rover from the command line. \r\nAn example of a command line used to run Undr Rover would be as follows:\r\n\r\n    undr_rover.py\r\n        --primer_coords <file containing target regions> \r\n        --primer_sequences <file containing primer sequences>\r\n        --log log_file <log_file_name.log>\r\n        --reference <reference.fa>\r\n        --out <output_file_name.vcf>\r\n        --coverdir <directory to place coverage files>\r\n        sample1*.fastq sample2*.fastq\r\n\r\nSample1 and sample2 must each have 2 fastq files, corresponding to the first and second reads in a read-pair. Please be aware that only FASTQs are accepted. If you have FASTQ.gz files, they will need to be decompressed prior to using Undr Rover. \r\n\r\n#### 7. A log file is produced by Undr Rover.\r\nA log file with the specified name will be created by Undr Rover. Below is an example of the start of a log file created by Undr Rover. \r\n\r\n    Mon, 15 Dec 2014 17:04:20 Program started.\r\n    Mon, 15 Dec 2014 17:04:20 Command line: undr_rover.py --primer_bases 15 --primer_coords k-plex_roverfile2.txt --primer_sequences k-plex_primers.txt --log log_file --id_info dbsnp.vcf.gz --reference fasta/hg19bis.fa --out variant_calls.vcf --coverdir coverage_files test_fastqs/SD0390_S70_L001_R1_001.fastq test_fastqs/SD0390_S70_L001_R2_001.fastq\r\n    Mon, 15 Dec 2014 17:04:21 Processing sample SD0390_S70_L001\r\n    Mon, 15 Dec 2014 17:04:22 Processing block chr: chr10, start: 89624214, end: 89624313\r\n    Mon, 15 Dec 2014 17:04:22 Number of read pairs in block: 0\r\n    Mon, 15 Dec 2014 17:04:22 Number of acceptable read pairs in block: 0\r\n    Mon, 15 Dec 2014 17:04:22 Number of variants found in block: 0\r\n    Mon, 15 Dec 2014 17:04:22 Processing block chr: chr10, start: 89653675, end: 89653774\r\n    Mon, 15 Dec 2014 17:04:22 Number of read pairs in block: 0\r\n    Mon, 15 Dec 2014 17:04:22 Number of acceptable read pairs in block: 0\r\n    Mon, 15 Dec 2014 17:04:22 Number of variants found in block: 0\r\n\r\n#### 8. Example of a complete command line for Undr Rover. \r\n\r\n    undr_rover.py   \r\n        --primer_coords roverfile.txt \r\n        --primer_sequences primers.txt \r\n        --log log_file \r\n        --reference fasta/hg19bis.fa \r\n        --out variant_calls.vcf \r\n        --coverdir coverage_files \r\n        sample1*.fastq sample2*.fastq\r\n\r\nNote that there are various optional command line arguments which can be used to alter the behaviour of Undr Rover. Further details on these can be found in the README on Undr Rover's [GitHub page](https://github.com/rli99/undr_rover).\r\n\r\nThis assumes that there are two FASTQ files each for sample1* and sample2*, which contain the first and second reads respectively for each read-pair. Roverfile.txt and primers.txt are both TSV format files containing data as described earlier. \r\n\r\nThe variants called will be written to the file variant_calls.vcf. This file will report called variants in accordance with the VCF v4.2 specification outlined at [here](http://samtools.github.io/hts-specs/VCFv4.2.pdf). Coverage files containing the number of read-pairs which mapped to each region will be output in coverage_files/sample1.coverage and coverage_files/sample2.coverage. A log file describing the actions taken by the program will be stored in log_file.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}